[tool.poetry]
name = "qontinui"
version = "0.1.0"
description = "Model-based GUI automation with AI-enhanced perception"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/your-org/qontinui-core"
repository = "https://github.com/your-org/qontinui-core"
documentation = "https://qontinui.github.io"
keywords = ["gui", "automation", "ai", "testing", "rpa"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "qontinui", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
pyautogui = "^0.9"
opencv-python = "^4.9"
transformers = "^4.36"
torch = "^2.2"
torchvision = "^0.17"
segment-anything = {version = "^1.0", optional = true}
accelerate = "^0.25"
timm = "^0.9"
supervision = "^0.17"
tokenizers = "^0.15"
ultralytics = "^8.0"
easyocr = "^1.7"
transitions = "^0.9"
lark = "^1.1"
scikit-learn = "^1.3"
networkx = "^3.2"
faiss-cpu = "^1.7"
numpy = "^1.26"
pillow = "^10.2"
pydantic-settings = "^2.0"
python-dotenv = "^1.0"
structlog = "^24.0"
mss = "^9.0"
prometheus-client = "^0.19"
psutil = "^5.9"
sqlalchemy = "^2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-cov = "^5.0"
pytest-asyncio = "^0.23"
black = "^24.0"
ruff = "^0.6"
mypy = "^1.8"
pre-commit = "^3.6"
sphinx = "^7.2"
sphinx-rtd-theme = "^2.0"

[tool.poetry.extras]
sam = ["segment-anything"]
all = ["segment-anything"]

[tool.poetry.scripts]
brobot-converter = "qontinui.migrations.brobot_converter:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.isort]
known-first-party = ["qontinui"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/qontinui",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
    "-v",
]

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.coverage.run]
source = ["src/qontinui"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]